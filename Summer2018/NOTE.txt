--------------------------TGGATAGGACAGAGCGG-------------------
tccccaaagtgcttgtgaggtgcgctTGGATAGGACAGAGCGGattgtgagtcaactacaat
--CCCAAAGTGCTTGTGAG-------------------------------------------
tcCCCAAAGTGCTTGTGAGgtgcgcttggataggacagagcggattgtgagtcaactacaat
-CCCCAAAGTGCTTGTGA--------------------------------------------
tCCCCAAAGTGCTTGTGAggtgcgcttggataggacagagcggattgtgagtcaactacaat
---CCAAAGTGCTTGTGAGG------------------------------------------
tccCCAAAGTGCTTGTGAGGtgcgcttggataggacagagcggattgtgagtcaactacaat
---CCAAAGTGCTTGTGAGG------------------------------------------
tccCCAAAGTGCTTGTGAGGtgcgcttggataggacagagcggattgtgagtcaactacaat
--------------------------------------------TTGTGAGTCAACTACAA-
tccccaaagtgcttgtgaggtgcgcttggataggacagagcggaTTGTGAGTCAACTACAAt
TCCCCAAAGTGCTTGTG---------------------------------------------
TCCCCAAAGTGCTTGTGaggtgcgcttggataggacagagcggattgtgagtcaactacaat
# Portion maker!!!
TCCCCAAAGTGCTTGTGAGGTGCGCTTGGATAGGACAGAGCGGATTGTGAGTCAACTACAAT
12355555555555555432000000111111111111111110111111111111111110

head -n12 m54152_170430_204839.subreads.bam.fastq | paste - - - - | awk '{print length($2)}'
6709
8025
9637
head -n12 m54152_170430_204839.subreads.bam.fastq | paste - - - - | awk '{print $1, length($2)}'
@m54152_170430_204839/5046460/0_6709 6709
@m54152_170430_204839/5046498/0_8025 8025
@m54152_170430_204839/5046498/8070_17707 9637
cat  m54152_170430_204839.subreads.bam.fastq | paste - - - - | awk '{print $1, length($2)}' | wc -l
101567

head -n 5000000 /sc1/groups/bfx-red/users/tranq6/STR/STR_report.csv | ./repeat_stats.py | awk 'length($1)==3' | grep -v seq | sort -g | grep -v 'n' | grep -v 'N'

fq to fa
cat test.fastq | paste - - - - | sed 's/^@/>/g'| cut -f1-2 | tr '\t' '\n'

### leetcode
https://buptwc.github.io/

### fatal error: stddef.h: No such file or directory
export CC=`which gcc`
export CXX=`which g++`

### software available on sc1
module avail

:stuck_out_tongue_closed_eyes: :neckbeard: :alien:
https://gist.github.com/rxaviers/7360908

%pylab inline
plt.xticks(rotation='vertical')

https://www.python.org/dev/peps/pep-0008/
https://github.com/google/styleguide/blob/gh-pages/pyguide.md

### Dict comprehension
https://stackoverflow.com/questions/1747817/create-a-dictionary-with-list-comprehension-in-python

### ShellCheck
https://github.com/koalaman/shellcheck
declare -a readonly samples=(LCL5  LCL6  LCL7  LCL8)

### argparse
parser = argparse.ArgumentParser(description="ComputeIdentityPortion", formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('--feature', dest='feature', action='store_true')
parser.add_argument('--no-feature', dest='feature', action='store_false')
parser.set_defaults(feature=True)

### string manipulate python
https://stackoverflow.com/questions/19926089/python-equivalent-of-java-stringbuffer

### MAPQ understanding
http://www.acgt.me/blog/2014/12/16/understanding-mapq-scores-in-sam-files-does-37-42

### DaveTang
https://github.com/davetang

### modify on string buffer
### create buffer large enough to hold your segments of aligned sequences
char_arr = np.empty(shape=(1024*1024), dtype='|S1')
### do some changes on the buffer
char_arr[0:4] = 'atgc'
char_arr[4:8] = 'nnnn'
char_arr[8:10] = 'aa'
### convert relevant part of buffer to a string 
seq_str = char_arr[0:10].tostring()

### thesis reference:
https://hal.archives-ouvertes.fr/tel-01484198v3/document

# bash [] vs. [[]]
http://mywiki.wooledge.org/BashFAQ/031

Basically mapped portion should be (readlength - clipped portion) readlength

# 2017 / April / Metagenomics
https://github.com/dib-lab/2017-dibsi-metagenomics

# single webpages
https://github.com/t413/SinglePaged

# number of read mapped
# single read
samtools view -F 0x904 -c file.sorted.bam
# paired end reads
samtools view -F 0x4 foo.sorted.bam | cut -f 1 | sort | uniq | wc -l

# fastq to fasta
cat test.fastq | paste - - - - | sed 's/^@/>/g'| cut -f1-2 | tr '\t' '\n' > test.fa

#pysam specs
https://media.readthedocs.org/pdf/pysam/latest/pysam.pdf
#flag
https://broadinstitute.github.io/picard/explain-flags.html

# change *.fastq to *.bam.fastq
echo "Processing in the folder..." $1
for file in $1/*.fastq
do
	echo "mv " "$file" "${file%.fastq}.bam.fastq"
	mv "$file" "${file%.fastq}.bam.fastq"
done

# qdel
# all your jobs on cluster
qstat | cut -d. -f1 | sed "s;   \(.*\) 0;qdel \1;" | bash

# qstat
qstat -u '*' | less -S
qsub -N bolt -l h_vmem=8GB -q all.q -cwd -pe smp ${NUM_THREADS} -b y "${BWA} ${BWA_OPT} ${BWA_IDX} ${FASTQ} | ${SAMTOOLS} view -Shu - | ${SAMTOOLS} sort -o ${BWA_BAM}; ${SAMTOOLS} index ${BWA_BAM}"

# reset terminal after displaying a binary file
Hit Control + C a couple of times (Ctrl+C)
Type the command reset and hit return

# key gen rsa
ssh-keygen -t rsa -b 4096
ls -lrt
cat .ssh/id_rsa.pub 

# git pull
Press i to enter insert mode.
Now you can type your message, as if you were in a normal (non-modal) text editor.
Press esc to go back to command mode.
Then type :w followed by enter to save.
Finally :q followed by enter to quit.

# sc1
mkdir -p $HOME/Desktop/sc1
sudo umount $HOME/Desktop/sc1
mkdir -p $HOME/Desktop/sc1
sudo sshfs -o follow_symlinks,allow_other,defer_permissions,IdentityFile=$HOME/.ssh/id_rsa tranq6@lb022dev.eth.rsshpc1.sc1.roche.com:/home/tranq6 $HOME/Desktop/sc1

# Current script DIR
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

ssh lb046dev.eth.rsshpc1.sc1.roche.com

# qsub
qsub -N aligners_study -q all.q -l h_vmem=8G build.sh
qsub -N try -l h_vmem=1G -q all.q -cwd -pe smp 1 -b y 'hostname; pwd; date'

qsub -N try -l h_vmem=1G -q all.q -cwd -pe smp 1 -b y ./tran_summer_2018/aligner_study/run.sh 
qstat
qstat -f -j 5008345
qstat -f -j 5008345 | less
ls -lrt
qstat
less try.o5008345 
less try.e5008345 

# tmux
module load tmux
tmux new-session -t main
tmux ls
#attach
tmux attach -t main
#detach
Ctrl+ b :detach  

# BWA INDEX prefix
MINICONDA/bin/bwa index -p tmp/TAIR10_chr_all.fas gen_data/TAIR10_chr_all.fas

# BWA
${BWA} ${BWA_OPT} ${IDX} ${FASTQ} | ${SAMTOOLS} view -Shu - | ${SAMTOOLS} sort -o ${BAM}
${SAMTOOLS} index ${BAM}

# Human genome on SC1
/home/mohiyudm/bfx-red/projects/seqc2/references/hg38/reference.fasta
# Find file names and direct path
find LCL5 -name "*.subreads.bam" | xargs readlink -f

# Space of all files
du -sh *

# Li Tai Fang's catching eye figs
/sc1/groups/bfx-red/data/datainsights/projects/NT44/Rawdata/alienTrimmed/GRCh38/HC/logs/akt.sh
https://github.com/Illumina/akt

samtools depth *bamfile*  |  awk '{sum+=$3; sumsq+=$3*$3} END { print "Average = ",sum/NR; print "Stdev = ",sqrt(sumsq/NR - (sum/NR)**2)}'

# split fastq to 2 files
cat original.fastq | awk 'NR%8==1 || NR%8==2 || NR%8==3 || NR%8==4' > first4s.fastq
cat original.fastq | awk 'NR%8==5 || NR%8==6 || NR%8==7 || NR%8==0' > second4s.fastq

grep "EXCISED REGION.S" ~/ChineseTrio/PacBio_XXX.AGE.report -A 2 | grep "first.*seq.*1[0-9][0-9][0-9][0-9] nucs"

# BRED
Bioinformatics Research and Early Development
Roche Sequencing Solutions
